{
    "headers": {
        "accept": "image/png",
        "content-type": "application/json"
    },
    "payload": {
        "evalscript": "\n      //VERSION=3\nfunction setup() {\n   return {\n      input: [\"B04\", \"B08\", \"dataMask\"],\n      output: { bands: 4 }\n   };\n}\n\nconst ramp = [\n   [-1, 0xC5142A],\n   [0.05, 0xC5142A],\n   [0.1, 0xC5142A],\n   [0.15, 0xE02D2C],\n   [0.2, 0xEF4C3A],\n   [0.25, 0xFE6C4A],\n   [0.3, 0xFF8D5A],\n   [0.35, 0xFFAB69],\n   [0.4, 0xFFC67D],\n   [0.45, 0xFFE093],\n   [0.5, 0xFFEFAB],\n   [0.55, 0xFDFEC2],\n   [0.6, 0xEAF7AC],\n   [0.65, 0xD5EF94],\n   [0.7, 0xB9E383],\n   [0.75, 0x9BD873],\n   [0.8, 0x77CA6F],\n   [0.85, 0x53BD6B],\n   [0.9, 0x14AA60],\n   [0.95, 0x009755],\n   [1, 0x007E47],\n];\n\nconst visualizer = new ColorRampVisualizer(ramp);\n\nfunction evaluatePixel(samples) {\n   let ndvi = index(samples.B08, samples.B04);\n   let imgVals = visualizer.process(ndvi);\n   return imgVals.concat(samples.dataMask)\n}\n    ",
        "input": {
            "bounds": {
                "bbox": [
                    9.332006,
                    36.328126,
                    9.338057,
                    36.334142
                ],
                "geometry": {
                    "coordinates": [
                        [
                            [
                                9.334409,
                                36.334142
                            ],
                            [
                                9.334409,
                                36.334142
                            ],
                            [
                                9.338057,
                                36.332085
                            ],
                            [
                                9.338057,
                                36.332085
                            ],
                            [
                                9.337285,
                                36.330615
                            ],
                            [
                                9.337285,
                                36.330615
                            ],
                            [
                                9.336898,
                                36.329561
                            ],
                            [
                                9.336898,
                                36.329561
                            ],
                            [
                                9.336362,
                                36.328126
                            ],
                            [
                                9.336362,
                                36.328126
                            ],
                            [
                                9.332006,
                                36.331151
                            ],
                            [
                                9.332006,
                                36.331151
                            ],
                            [
                                9.332693,
                                36.331998
                            ],
                            [
                                9.332693,
                                36.331998
                            ],
                            [
                                9.333315,
                                36.332932
                            ],
                            [
                                9.333315,
                                36.332932
                            ],
                            [
                                9.334409,
                                36.334142
                            ]
                        ]
                    ],
                    "type": "Polygon"
                },
                "properties": {
                    "crs": "http://www.opengis.net/def/crs/EPSG/0/4326"
                }
            },
            "data": [
                {
                    "dataFilter": {
                        "timeRange": {
                            "from": "2024-10-09T00:00:00Z",
                            "to": "2024-10-09T23:59:59Z"
                        }
                    },
                    "type": "sentinel-2-l2a"
                }
            ]
        },
        "output": {
            "height": 512,
            "responses": [
                {
                    "format": {
                        "type": "image/png"
                    },
                    "identifier": "default"
                }
            ],
            "width": 512
        }
    },
    "timestamp": "2024-11-01T10:56:03.393871",
    "url": "https://services.sentinel-hub.com/api/v1/process"
}