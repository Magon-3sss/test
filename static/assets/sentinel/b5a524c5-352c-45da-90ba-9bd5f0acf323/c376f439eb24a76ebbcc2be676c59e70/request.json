{
    "headers": {
        "accept": "image/png",
        "content-type": "application/json"
    },
    "payload": {
        "evalscript": "\n            //VERSION=3\n            function setup() {\n                return {\n                    input: [\"B08\", \"B04\", \"B11\", \"dataMask\"],\n                    output: { bands: 4 }\n                };\n            }\n\n            function evaluatePixel(sample) {\n                let ndvi = index(sample.B08, sample.B04);\n                let ndmi = index(sample.B08, sample.B11);\n                \n                // Anomaly detection logic, e.g., thresholding\n                let anomalyDetected = (ndvi < 0.2 && ndmi > 0.4) ? [1, 0, 0, sample.dataMask] : [0, 1, 0, sample.dataMask];\n                return anomalyDetected;\n            }\n        ",
        "input": {
            "bounds": {
                "bbox": [
                    28.46077,
                    22.752656,
                    28.574409,
                    22.859281
                ],
                "geometry": {
                    "coordinates": [
                        [
                            [
                                28.4618,
                                22.8577
                            ],
                            [
                                28.4618,
                                22.8577
                            ],
                            [
                                28.573723,
                                22.859281
                            ],
                            [
                                28.573723,
                                22.859281
                            ],
                            [
                                28.574409,
                                22.753922
                            ],
                            [
                                28.574409,
                                22.753922
                            ],
                            [
                                28.462486,
                                22.752656
                            ],
                            [
                                28.462486,
                                22.752656
                            ],
                            [
                                28.46077,
                                22.8577
                            ],
                            [
                                28.4618,
                                22.8577
                            ]
                        ]
                    ],
                    "type": "Polygon"
                },
                "properties": {
                    "crs": "http://www.opengis.net/def/crs/EPSG/0/4326"
                }
            },
            "data": [
                {
                    "dataFilter": {
                        "timeRange": {
                            "from": "2024-01-11T00:00:00Z",
                            "to": "2024-01-11T23:59:59Z"
                        }
                    },
                    "type": "sentinel-2-l2a"
                }
            ]
        },
        "output": {
            "height": 512,
            "responses": [
                {
                    "format": {
                        "type": "image/png"
                    },
                    "identifier": "default"
                }
            ],
            "width": 512
        }
    },
    "timestamp": "2024-11-04T11:18:01.520674",
    "url": "https://services.sentinel-hub.com/api/v1/process"
}