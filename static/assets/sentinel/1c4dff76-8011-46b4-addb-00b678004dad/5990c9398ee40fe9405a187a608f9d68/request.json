{
    "headers": {
        "accept": "image/png",
        "content-type": "application/json"
    },
    "payload": {
        "evalscript": "\n      //VERSION=3\n\n        let val = (B08 - B04) / (B08 + B04)\n                if (dataMask == 1){\n                    \n                    \n                    if (val<-0.5) return [0.05,0.05,0.05, 1]\n                    else if (val<-0.2) return [0.75,0.75,0.75, 1]\n                    else if (val<-0.1) return [0.86,0.86,0.86, 1]\n                    else if (val<0) return [0.92,0.92,0.92, 1]\n                    else if (val<0.025) return [1,0.98,0.8, 1]\n                    else if (val<0.05) return [0.93,0.91,0.71, 1]\n                    else if (val<0.075) return [0.87,0.85,0.61, 1]\n                    else if (val<0.1) return [0.8,0.78,0.51, 1]\n                    else if (val<0.125) return [0.74,0.72,0.42, 1]\n                    else if (val<0.15) return [0.69,0.76,0.38, 1]\n                    else if (val<0.175) return [0.64,0.8,0.35, 1]\n                    else if (val<0.2) return [0.57,0.75,0.32, 1]\n                    else if (val<0.25) return [0.5,0.7,0.28, 1]\n                    else if (val<0.3) return [0.44,0.64,0.25, 1]\n                    else if (val<0.35) return [0.38,0.59,0.21, 1]\n                    else if (val<0.4) return [0.31,0.54,0.18, 1]\n                    else if (val<0.45) return [0.25,0.49,0.14, 1]\n                    else if (val<0.5) return [0.19,0.43,0.11, 1]\n                    else if (val<0.55) return [0.13,0.38,0.07, 1]\n                    else if (val<0.6) return [0.06,0.33,0.04, 1]\n                    else if (val==0) return [1, 1, 1, 1]\n                    else return [0,0.27,0, 1]\n                }\n                else{\n                    return [1, 1, 1, 0]\n                } \n    ",
        "input": {
            "bounds": {
                "bbox": [
                    28.46077,
                    22.752656,
                    28.574409,
                    22.859281
                ],
                "geometry": {
                    "coordinates": [
                        [
                            [
                                28.4618,
                                22.8577
                            ],
                            [
                                28.4618,
                                22.8577
                            ],
                            [
                                28.573723,
                                22.859281
                            ],
                            [
                                28.573723,
                                22.859281
                            ],
                            [
                                28.574409,
                                22.753922
                            ],
                            [
                                28.574409,
                                22.753922
                            ],
                            [
                                28.462486,
                                22.752656
                            ],
                            [
                                28.462486,
                                22.752656
                            ],
                            [
                                28.46077,
                                22.8577
                            ],
                            [
                                28.4618,
                                22.8577
                            ]
                        ]
                    ],
                    "type": "Polygon"
                },
                "properties": {
                    "crs": "http://www.opengis.net/def/crs/EPSG/0/4326"
                }
            },
            "data": [
                {
                    "dataFilter": {
                        "timeRange": {
                            "from": "2023-03-08T00:00:00Z",
                            "to": "2023-03-08T23:59:59Z"
                        }
                    },
                    "type": "sentinel-2-l2a"
                }
            ]
        },
        "output": {
            "height": 512,
            "responses": [
                {
                    "format": {
                        "type": "image/png"
                    },
                    "identifier": "default"
                }
            ],
            "width": 512
        }
    },
    "timestamp": "2024-05-29T11:01:16.156172",
    "url": "https://services.sentinel-hub.com/api/v1/process"
}