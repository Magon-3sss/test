# Project         :   Noa - Django Bootstrap 5 Admin & Dashboard Template
# Framework       :   Django
# Django Version  :   4.0.3
# Python Version  :   3.10.2
# pip Version     :   22.0.4
# Created Date    :   17/03/2022
# Copyright       :   Spruko Technologies Private Limited
# Author          :   SPRUKO™
# Author URL      :   https://themeforest.net/user/Spruko
# Support         :   support@spruko.com
# License         :   Licensed under ThemeForest License
 
"""
Django settings for noa project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
from datetime import timedelta, datetime
from hashlib import new
import os
from pathlib import Path
from . info import *
import django
from django.utils.encoding import force_str
django.utils.encoding.force_text = force_str
#from rest_framework_jwt.authentication import JSONWebTokenAuthentication
import jwt

import pytesseract

pytesseract.pytesseract.tesseract_cmd = r'C:/Program Files/Tesseract-OCR/tesseract.exe'


EMAIL_USE_TLS = EMAIL_USE_TLS
EMAIL_HOST = EMAIL_HOST
EMAIL_HOST_USER =EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = EMAIL_HOST_PASSWORD
EMAIL_PORT = EMAIL_PORT

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')
STATIC_DIR = os.path.join(BASE_DIR, 'static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'static/assets')
MEDIA_URL = '/media/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
""" SECRET_KEY = config('SECRET_KEY') """
SECRET_KEY = 'django-insecure-(5d_*k*!6*rk=g=+06jl+=u%d76p&2jps!!1zhf#lck(=lg*nx' 

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
""" ALLOWED_HOSTS = ['*'] """

ALLOWED_HOSTS = ['app.magon.cloud', '57.129.38.15', '127.0.0.1', 'localhost']
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework_jwt',
    'rest_framework.authtoken',
    'rest_framework_simplejwt',
    'django_extensions',
    'requests',
    'app'
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),  
}
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_TOKEN_CLASSES': (
        'rest_framework_simplejwt.tokens.AccessToken',
    ),
    #'AUTH_TOKEN_CLASSES': ('path.to.CustomToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'JTI_CLAIM': 'jti',
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(days=120),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),       
}
JWT_AUTH = {
    'JWT_SECRET_KEY': '43a4456d1b67fa78bccda3c21766fb2cadcb996f5db95487',
    'JWT_ALGORITHM': 'HS256',
    'JWT_ALLOW_REFRESH': True,
}
AUTHENTICATION_CLASSES = (
    'rest_framework.authentication.SessionAuthentication',
    'rest_framework.authentication.BasicAuthentication',
)


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    # other middleware classes
    'htmlmin.middleware.HtmlMinifyMiddleware',
    'htmlmin.middleware.MarkRequestMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'app.middleware.GroupAuthorizationMiddleware',
    #'app.middleware.jwt_middleware.CustomAuthenticationMiddleware',
    #'app.middleware.jwt_middleware.jwt_middleware',
]

""" SESSION_ENGINE = 'django.contrib.sessions.backends.db'
# Durée de vie d'une session en secondes (ici, 1209600 secondes = 2 semaines)
SESSION_COOKIE_AGE = 1209600

# Nom du cookie de session
SESSION_COOKIE_NAME = 'my_session_cookie'

# Utilisez uniquement des cookies sécurisés (HTTPS)
SESSION_COOKIE_SECURE = True

# Ne transmettez le cookie de session que sur des connexions sécurisées (HTTPS)
SESSION_COOKIE_SECURE = True

# Gardez le cookie de session pour la même origine
SESSION_COOKIE_SAMESITE = 'Lax' """

CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOWED_ORIGINS = [ 'https://0a92-34-106-208-190.ngrok-free.app', 'http://localhost:8000', 'http://127.0.0.1:8000']


ROOT_URLCONF = 'noa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'noa.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

""" DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('PG_DB', 'new'),
        'USER': os.environ.get('PG_USER', 'new'),
        'PASSWORD': os.environ.get('PG_PASSWORD', 'new'),
        'HOST': 'db',
        'PORT': '5432',
    }
} """

""" DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('PG_DB', 'new'),
        'USER': os.getenv('PG_USER', 'new'),
        'PASSWORD': os.getenv('PG_PASSWORD', 'new'),
        'HOST': 'app_db',  
        'PORT': os.getenv('PG_PORT', '5432'),
    }
} """

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'new',
        'USER': 'new',
        'PASSWORD': 'new',
        'PORT': 5432,
        'HOST': 'localhost',            
    }
}  

""" DATABASES = {
    'default': dj_database_url.parse(config('DATABASE_URL'))
} """

#AUTH_USER_MODEL="app.User"
#AUTHENTICATION_BACKENDS = ('django.contrib.auth.backends.ModelBackend', 'guardian.backends.ObjectPermissionBackend')

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

HTML_MINIFY = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'
STATICFILES_DIRS = [STATIC_DIR]
print(STATIC_DIR)

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'